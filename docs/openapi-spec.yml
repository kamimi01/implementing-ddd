openapi: 3.0.0
paths:
  /participants:
    get:
      operationId: ParticipantController_getParticipants
      summary: 参加者の一覧の取得または条件付き取得
      parameters: []
      responses:
        '200':
          description: 取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetParticipantsResponse'
      tags: &ref_0
        - 参加者
    post:
      operationId: ParticipantController_createParticipants
      summary: 参加者の新規追加
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostParticipantsRequest'
      responses:
        '201':
          description: 登録成功のため、登録された参加者の情報を返却する
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Participants'
      tags: *ref_0
  /participants/{participant_id}/registration-status:
    patch:
      operationId: ParticipantController_updateParticipantRegistrationStatus
      summary: 参加者ごとの在籍ステータスの更新
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchParticipantRegistrationStatusRequest'
      responses:
        '200':
          description: 更新成功のため、更新された参加者の情報を返却する
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Participants'
      tags: *ref_0
  /teams:
    get:
      operationId: TeamController_getPairs
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - チーム
  /pairs:
    get:
      operationId: PairController_getPairs
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - ペア
  /issues:
    post:
      operationId: IssueController_createIssues
      summary: 課題の新規追加
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostIssuesRequest'
      responses:
        '201':
          description: 登録成功のため、登録された課題の情報を返却する
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Issues'
      tags: &ref_1
        - 課題
  /issues/{issue_id}/participants/{participant_id}/progression-status:
    patch:
      operationId: IssueController_updateIssueProgressionStatus
      summary: 課題の進捗ステータスを参加者ごとに更新
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchIssueProgressionStatusRequest'
      responses:
        '200':
          description: 更新成功のため、更新された課題の情報を返却する
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Issues'
      tags: *ref_1
info:
  title: Praha ChallengeをDDDで実装する
  description: Praha ChallengeをDDDで実装する
  version: '1.0'
  contact: {}
tags: []
servers: []
components:
  schemas:
    Participants:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        registrationStatus:
          type: string
      required:
        - id
        - name
        - email
        - registrationStatus
    GetParticipantsResponse:
      type: object
      properties:
        participants:
          type: array
          items:
            $ref: '#/components/schemas/Participants'
      required:
        - participants
    PostParticipantsRequest:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
      required:
        - name
        - email
    PatchParticipantRegistrationStatusRequest:
      type: object
      properties:
        registrationStatus:
          type: string
      required:
        - registrationStatus
    PostIssuesRequest:
      type: object
      properties:
        name:
          type: string
      required:
        - name
    Issues:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      required:
        - id
        - name
    PatchIssueProgressionStatusRequest:
      type: object
      properties:
        progressionStatus:
          type: string
      required:
        - progressionStatus
